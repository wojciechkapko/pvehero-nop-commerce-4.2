@model ProductOverviewModel
@using Nop.Core
@using Nop.Core.Domain.Catalog
@using Nop.Core.Domain.Orders
@using Nop.Core.Domain.Tax

<div class="product-item product-@Model.Id d-flex justify-content-center" data-productid="@Model.Id">
    <a class="link waves-effect waves-light" href="@Url.RouteUrl("Product", new {SeName = Model.SeName})"></a>
    <img alt="Picture of @Model.Name" src="https://res.cloudinary.com/pvehero-images/image/upload/f_auto,w_276,e_sharpen:70/product-details/@(Model.SeName).jpg" title="Picture of @Model.Name" />
    <div class="details">
        <div class="badges">
            @if (Model.MarkAsNew)
            {
                <span class="badge new mr-2">New</span>
            }
            @if (Model.ProductPrice.isDiscounted)
            {
                <span class="badge discount">-@Model.ProductPrice.DiscountValue%</span>
            }
        </div>
        <h2 class="product-title">@Model.Name</h2>

        <div class="prices">
            @if (!string.IsNullOrEmpty(Model.ProductPrice.OldPrice))
            {
                <span class="price old-price">@Model.ProductPrice.OldPrice</span>
            }
            @if (!string.IsNullOrEmpty(Model.ProductPrice.Price))
            {
                <span class="price actual-price">From: @Model.ProductPrice.Price</span>
            }
            else
            {
                <span class="price actual-price">Click to choose options</span>
            }
        </div>
    </div>
</div>