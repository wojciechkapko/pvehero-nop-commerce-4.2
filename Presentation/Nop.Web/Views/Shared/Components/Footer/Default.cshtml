@model FooterModel
@using Nop.Core
@using Nop.Core.Domain.Tax
@inject IWorkContext workContext;
    <div class="footer">
        <div class="footer-upper">
            <div class="footer-block data">
                <address class="contact-info d-flex flex-column">
                    <span>
                        <svg class="icon svg-baseline"><use href="#skype"></use></svg>Skype: <a href="skype:contact.pvehero?chat" data-toggle="tooltip" title="Click to chat">contact.pvehero</a>
                    </span>
                    <span>
                        <svg class="icon svg-baseline"><use href="#whatsapp"></use></svg>Whatsapp: <a href="https://api.whatsapp.com/send?phone=48691019390">+48691019390</a>
                    </span>
                    <span>
                        <svg class="icon svg-baseline"><use href="#discord"></use></svg>Discord: <a href="https://discord.gg/YYeuMSe">pveHero</a>
                    </span>
                    <span>
                        <svg class="icon svg-baseline"><use href="#mail"></use></svg>Mail: <a href="mailto:contact@pvehero.com">contact@pvehero.com</a>
                    </span>
                    <span>
                        <svg class="icon svg-baseline"><use href="#clock"></use></svg>Workhours: Mon. - Sun.: 11:00 - 23:00 <span class="size-0-85x">GMT+1</span>
                    </span>
                </address>
                <div class="social">
                    @await Component.InvokeAsync("SocialButtons")
                </div>
                @await Component.InvokeAsync("NewsletterBox")
            </div>
            <div class="footer-block information">
                <div class="title">
                    <strong>@T("Footer.Information")</strong>
                </div>
                <ul class="list">
                    <li><a href="@Url.RouteUrl("HowItWorks")">How it works</a></li>
                    @if (Model.SitemapEnabled && Model.DisplaySitemapFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("Sitemap")">@T("Sitemap")</a></li>
                    }
                    @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn1).ToList())
                    {
                        <li><a href="@Url.RouteUrl("Topic", new { SeName = topic.SeName })">@topic.Name</a></li>
                    }
                </ul>
            </div>
            <div class="footer-block games">
                <div class="title">
                    <strong>Games</strong>
                </div>
                <ul class="list">
                    <li><a href="@Url.RouteUrl("Category", new { SeName = "world-of-warcraft" })">World of Warcraft</a></li>
                    <li><a href="javascript:void(0)" data-toggle="tooltip" title="Coming soon" style="opacity:0.5">Hearthstone</a></li>
                    <li><a href="javascript:void(0)" data-toggle="tooltip" title="Coming soon" style="opacity:0.5">League of Legends</a></li>
                    <li><a href="javascript:void(0)" data-toggle="tooltip" title="Coming soon" style="opacity:0.5">Destiny 2</a></li>
                    <li><a href="javascript:void(0)" data-toggle="tooltip" title="Coming soon" style="opacity:0.5">Diablo 3</a></li>
                </ul>
            </div>
            <div class="footer-block my-account">
                <div class="title">
                    <strong>Navigation</strong>
                </div>
                <ul class="list">
                    @if (Model.DisplayCustomerInfoFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("CustomerInfo")">@T("Account.MyAccount")</a></li>
                    }
                    @if (Model.DisplayCustomerOrdersFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("CustomerOrders")">@T("Account.CustomerOrders")</a></li>
                    }
                    @if (Model.DisplayCustomerAddressesFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("CustomerAddresses")">@T("Account.CustomerAddresses")</a></li>
                    }
                    @if (Model.ShoppingCartEnabled && Model.DisplayShoppingCartFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("ShoppingCart")">@T("ShoppingCart")</a></li>
                    }
                    @if (Model.WishlistEnabled && Model.DisplayWishlistFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("Wishlist")">@T("Wishlist")</a></li>
                    }
                    @if (Model.AllowCustomersToApplyForVendorAccount && Model.DisplayApplyVendorAccountFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("ApplyVendorAccount")">@T("Vendors.ApplyAccount")</a></li>
                    }
                    @foreach (var topic in Model.Topics.Where(x => x.IncludeInFooterColumn3).ToList())
                    {
                        <li><a href="@Url.RouteUrl("Topic", new {SeName = topic.SeName})">@topic.Name</a></li>
                    }
                    @if (Model.DisplayContactUsFooterItem)
                    {
                        <li><a href="@Url.RouteUrl("ContactUs")">@T("ContactUs")</a></li>
                    }
                </ul>
            </div>
        </div>
        <div class="footer-lower">
            <div class="footer-info">
                <span class="footer-disclaimer">@T("Content.CopyrightNotice", DateTime.Now.Year, Model.StoreName)</span>
                @if (Model.DisplayTaxShippingInfoFooter)
                {
                    var inclTax = workContext.TaxDisplayType == TaxDisplayType.IncludingTax;
                    <span class="footer-tax-shipping">
                        @T(inclTax ? "Footer.TaxShipping.InclTax" : "Footer.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = Html.GetTopicSeName("shippinginfo") }))
                    </span>
                }
            </div>
            @if (!Model.HidePoweredByNopCommerce)
            {
                <div class="footer-powered-by">
                    @*Would you like to remove the "Powered by nopCommerce" link in the bottom of the footer?
                    Please find more info at https://www.nopcommerce.com/copyrightremoval.aspx*@
                    Powered by <a href="https://www.nopcommerce.com/">nopCommerce</a>
                </div>
            }
            @await Component.InvokeAsync("StoreThemeSelector")
        </div>
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.Footer })
        <script asp-location="Footer">
    $(document).ready(function () {
        $('.footer-block .title').on('click', function () {
            var e = window, a = 'inner';
            if (!('innerWidth' in window)) {
                a = 'client';
                e = document.documentElement || document.body;
            }
            var result = { width: e[a + 'Width'], height: e[a + 'Height'] };
            if (result.width < 769) {
                $(this).siblings('.list').slideToggle('slow');
            }
        });
    });
        </script>
        <script asp-location="Footer">
    $(document).ready(function () {
        $('.block .title').on('click', function () {
            var e = window, a = 'inner';
            if (!('innerWidth' in window)) {
                a = 'client';
                e = document.documentElement || document.body;
            }
            var result = { width: e[a + 'Width'], height: e[a + 'Height'] };
            if (result.width < 1001) {
                $(this).siblings('.listbox').slideToggle('slow');
            }
        });
    });
        </script>
    </div>