@model IList<CategoryModel>
@if (Model.Count > 0)
{
    <div class="category-list home-page-category-list">
        <div class="item-list">
            @foreach (var item in Model)
            {
                var category = item.SeName.Replace("-", string.Empty);
                //@await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageBeforeBestSellers })
                <div class="item-box category">
                    <h2 class="title">
                        <svg class='icon shadow svg-baseline'><use href='#@item.SeName'></use></svg>
                        @item.Name
                    </h2>
                    <div class="category-details">
                        <div class="side-2">
                            @await Component.InvokeAsync("HomepageBestSellers", item.Id)
                        </div>
                        <div class="center-2">
                            <div class="product-grid home-page-product-grid carousel">
                                <div class="title">
                                    <strong>Featured</strong>
                                    <a class="button-3" href="@Url.RouteUrl("Category", new { SeName = item.SeName })">See all</a>
                                </div>

                                @*@await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageBeforeProducts })*@
                                <div class="featured-slider @category">
                                    @await Component.InvokeAsync("HomepageProducts", item.Id)
                                </div>



                                @*
                                                               <div class="item-grid">
                                @foreach (var product in item.Products)
                                {
                                    <div class="item-box">
                                        @await Html.PartialAsync("_ProductBox", product)
                                    </div>
                                }
                            </div>
                                *@

                            </div>
                        </div>
                    </div>
                </div>

                <script type="module" asp-location="Footer">
            var sliderCat_@category = tns({
                container: '.featured-slider.@category',
                items: 1,
                slideBy: 1,
                gutter: 23,
                edgePadding: 7,
                controlsText: ["<svg class='icon size-1'><use href='#chevron-left'></use></svg>", "<svg class='icon size-1'><use href='#chevron-right'></use></svg>"],
                nav: false,
                responsive: {
                481: {
                    items: 2,
                    slideBy: 2
                    },
                769: {
                    items: 3,
                    slideBy: 3
                    }
                }
            });
                </script>
            }
        </div>
    </div>



}

