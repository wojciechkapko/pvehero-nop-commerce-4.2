@model TopMenuModel.CategoryLineModel
<li class="md-font-size-lg">
    <a href="@Url.RouteUrl("Category", new { SeName = Model.Category.SeName })" class="font-bold d-flex align-items-center text-upper">
        <svg class='icon shadow svg-baseline mr-2' @(Model.Category.SeName == "world-of-warcraft" ? "style=font-size:2rem!important" : "style=font-size:1.75rem!important")><use href='#@Model.Category.SeName'></use></svg>
        @Model.Category.Name
        @if (Model.Category.NumberOfProducts.HasValue)
        {
            <text> </text>@T("Categories.TotalProducts", Model.Category.NumberOfProducts.Value)
        }
    </a>
    @{
        //subcategories
        var subCategories = Model.ResponsiveMobileMenu ?
            //responsive (all categories)
            Model.Category.SubCategories :
            //standard design (only categories with "IncludeInTopMenu")
            Model.Category.SubCategories.Where(x => x.IncludeInTopMenu).ToList();

        var levelClass = "";
        if (Model.Level == 0)
        {
            levelClass = "first-level";
        }
        if (subCategories.Count > 0)
        {
        <div class="sublist-toggle">
            <svg class="icon font-size-base white"><use href="#chevron-down"></use></svg>
        </div>
            <ul class="sublist @levelClass">
                @foreach (var subCategory in subCategories)
                {
                    var categoryLineModel = new TopMenuModel.CategoryLineModel
                    {
                        Category = subCategory,
                        Level = Model.Level + 1,
                        ResponsiveMobileMenu = Model.ResponsiveMobileMenu
                    };
                    @await Html.PartialAsync("_CategoryLine.TopMenu", categoryLineModel)
                }
            </ul>
        }
    }
</li>