@{
    Layout = "_ColumnsOne";

    //page class
    Html.AppendPageCssClassParts("html-home-page");
    Html.AppendCssFileParts($"~/css/homepage.min.css");
    Html.AppendCssFileParts($"~/lib/tiny-slider/tiny-slider.min.css");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/lib/tiny-slider/tiny-slider.min.js");
}

<div class="page home-page">
    <div class="page-body">
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageTop })
        @await Component.InvokeAsync("TopicBlock", new { systemName = "HomepageText" })
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageBeforeCategories })
        @await Html.PartialAsync("_HomepageSlider")
        @await Component.InvokeAsync("HomepageCategories")
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageBeforeNews })
        @await Component.InvokeAsync("HomepageNews")
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageBeforePoll })
        @await Component.InvokeAsync("HomepagePolls")
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HomepageBottom })
    </div>
</div>


<script type="module" asp-location="Footer">
    var slider = tns({
        items: 1,
        slideBy: 1,
        autoplay: true,
        autoplayTimeout: 4000,
        autoplayHoverPause: true,
        fixedWidth: false,
        gutter: 10,
        controlsText: ["<svg class='icon size-1'><use href='#chevron-left'></use></svg>", "<svg class='icon size-1'><use href='#chevron-right'></use></svg>"],
        nav: false,
        center: true,
        responsive: {
            689: {
                edgePadding: 35
            },
            1001: {
                fixedWidth: 870,
                center: false,
                edgePadding: 0
            }
        }
    });

    $('.slider-wrapper').velocity({ opacity: 1 }, { duration: 250 });
</script>