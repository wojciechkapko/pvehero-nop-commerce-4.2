@model ProductsByTagModel
@using Nop.Core.Domain.Seo
@inject Nop.Core.IWebHelper webHelper
@inject SeoSettings seoSettings
@{
    Layout = "_ColumnsTwo";

    //title
    Html.AddTitleParts(string.Format(T("PageTitle.ProductsByTag").Text, Model.TagName));
    //page class
    Html.AppendPageCssClassParts("html-product-tag-page" + " class-" + @Model.TagIcon);


    Html.AppendScriptParts(ResourceLocation.Footer, "~/lib/formstone/core.min.js");
    Html.AddScriptParts(ResourceLocation.Footer, "~/lib/formstone/dropdown.min.js");
    Html.AppendCssFileParts($"~/lib/formstone/dropdown.min.css");
    Html.AppendCssFileParts($"~/css/catalog.min.css");
    Html.AppendCssFileParts($"~/css/product-grid.min.css");
    Html.AppendCssFileParts($"~/css/breadcrumb.min.css");
    Html.AppendCssFileParts($"~/css/pager.min.css");

    //canonical URL
    if (seoSettings.CanonicalUrlsEnabled)
    {
        var productsByTagUrl = Url.RouteUrl("ProductsByTag", new { SeName = Model.TagSeName }, webHelper.CurrentRequestProtocol).ToLowerInvariant();
        Html.AddCanonicalUrlParts(productsByTagUrl, seoSettings.QueryStringInCanonicalUrlsEnabled);
    }
}
<div class="page product-tag-page">
    <div class="page-title">
        <h1>
            @T("Products.Tags.ProductsTaggedWith")
        <span class="badge tag ml-2">
            @if (!string.IsNullOrEmpty(Model.TagIcon))
            {
                <svg class='icon shadow svg-baseline mr-2'><use href='#@Model.TagIcon'></use></svg>
            }
            @Model.TagName
        </span>
    </h1>
</div>
<div class="page-body">
    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ProductsByTagTop, additionalData = Model })
    @if (Model.Products.Count > 0)
    {
        @await Html.PartialAsync("_CatalogSelectors", Model.PagingFilteringContext)
    }
    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ProductsByTagBeforeProductList, additionalData = Model })
    @if (Model.Products.Count > 0)
    {
        <div class="@(Model.PagingFilteringContext.ViewMode == "list" ? "product-list" : "product-grid")">
            <div class="item-grid">
                @foreach (var product in Model.Products)
                {
                    <div class="item-box">
                        @await Html.PartialAsync("_ProductBoxCatalog", product)
                    </div>
                }
            </div>
        </div>
    }
    @{
        var pager = Html.Pager(Model.PagingFilteringContext).QueryParam("pagenumber");
    }
    @if (!pager.IsEmpty())
    {
        <div class="pager">
            @pager
        </div>
    }
    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ProductsByTagBottom, additionalData = Model })
</div>
</div>


<style>
        .html-product-tag-page.class-@(Model.TagIcon) .master-wrapper-page::before
        {
            background-image: url(https://res.cloudinary.com/pvehero-images/image/upload/f_auto/bg/@Model.TagIcon-bg.jpg) !important;
        }
</style>