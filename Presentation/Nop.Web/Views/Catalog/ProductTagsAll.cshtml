@model PopularProductTagsModel
@{
    Layout = "_ColumnsTwo";

    //title
    Html.AddTitleParts(T("PageTitle.AllProductTags").Text);
    //page class
    Html.AppendPageCssClassParts("html-product-tags-all-page");
    Html.AppendScriptParts(ResourceLocation.Footer, "~/lib/formstone/core.min.js");
    Html.AddScriptParts(ResourceLocation.Footer, "~/lib/formstone/dropdown.min.js");
    Html.AppendCssFileParts($"~/lib/formstone/dropdown.min.css");
    Html.AppendCssFileParts($"~/css/catalog.min.css");
    Html.AppendCssFileParts($"~/css/product-grid.min.css");
    Html.AppendCssFileParts($"~/css/breadcrumb.min.css");
    Html.AppendCssFileParts($"~/css/pager.min.css");
}
<div class="page product-tags-all-page">
    <div class="page-title">
        <h1>@T("Products.Tags.All")</h1>
    </div>
    <div class="page-body">
        @if (Model.Tags.Count > 0)
        {
            <ul class="product-tags-list">
                @foreach (var item in Model.Tags)
                {
                    <li>
                        <a href="@Url.RouteUrl("ProductsByTag", new { item.SeName })" class="producttag" style="font-size:@(Model.GetFontSize(item))%;">
                        @item.Name</a>
                    </li>
                }
            </ul>
        }
    </div>
</div>
