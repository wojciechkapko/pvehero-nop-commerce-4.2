@model CheckoutConfirmModel
@{
    Layout = "_ColumnsOne";

    //title
    Html.AddTitleParts(T("PageTitle.Checkout").Text);
    //page class
    Html.AppendPageCssClassParts("html-checkout-page");
    Html.AppendPageCssClassParts("html-order-confirm-page");
    Html.AddScriptParts(ResourceLocation.Footer, "https://js.stripe.com/v3/", "", true);
    Html.AppendCssFileParts($"~/css/cart.min.css");
    Html.AppendCssFileParts($"~/css/checkout.min.css");
}
<div class="page checkout-page order-confirm-page">
    @await Component.InvokeAsync("CheckoutProgress", new { step = CheckoutProgressStep.Confirm })
    <div class="page-title">
        <h1>@T("Checkout.ConfirmYourOrder")</h1>
    </div>
    <div class="page-body checkout-data">
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.CheckoutConfirmTop })
        <div class="section confirm-order">
            <form asp-route="CheckoutConfirm" method="post" id="confirm-order-form">
                @if (!string.IsNullOrEmpty(Model.MinOrderTotalWarning))
                {
                    <span class="min-order-warning">@Model.MinOrderTotalWarning</span>
                }
                else
                {
                    <div class="wrapper">
                        <div class="spinner-wrapper">
                            <div class="spinner"></div>
                        </div>
                    </div>
                    <div class="buttons">
                        <input type="submit" id="confirm-order" name="nextstep" value="@T("Checkout.ConfirmButton")" class="d-none confirm-order-next-step-button" />
                    </div>
                    <script asp-location="Footer">
                        $('#confirm-order-form').on('submit',
                            function () {
                                var button = $(this).find('input[type="submit"][name="nextstep"]');
                                setTimeout(function () {
                                    button.prop('disabled', true);
                                },
                                    0);
                            });
                    </script>
                }
                @if (Model.Warnings.Count > 0)
                {
                    <div class="message-error">
                        <ul>
                            @foreach (var warning in Model.Warnings)
                            {
                                <li>@warning</li>
                            }
                        </ul>
                    </div>
                }
            </form>
        </div>
        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.CheckoutConfirmBottom })
    </div>
</div>

<script type="text/javascript" asp-location="Footer">
    $(document).ready(function () {
        setTimeout(function () {
            $("#confirm-order").click();
        },100);
    });
</script>