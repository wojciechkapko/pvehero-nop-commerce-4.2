@model ContactUsModel
@{
    Layout = "_ColumnsOne";

    //title
    Html.AddTitleParts(T("PageTitle.ContactUs").Text);
    //page class
    Html.AppendPageCssClassParts("html-contact-page");
    Html.AppendCssFileParts($"~/css/logo-icon.min.css");
    Html.AppendCssFileParts($"~/css/contactus.min.css");



}
<div class="page contact-page">
    <div class="page-title">
        <h1>@T("PageTitle.ContactUs")</h1>
    </div>
    <div class="page-body">
        <div class="card default md-flex-row align-items-center p-4">
            <div class="left pvehero-axe d-none sm-d-flex"></div>
            <div class="right pvehero-axe d-none sm-d-flex"></div>

            @await Component.InvokeAsync("TopicBlock", new { systemName = "ContactUs" })
            @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ContactUsTop })
            @if (Model.SuccessfullySent)
            {
                <div class="result">
                    @Model.Result
                </div>
            }
            else
            {
        <form asp-route="ContactUs" method="post" class="md-ml-auto xl-ml-0">
            <div asp-validation-summary="ModelOnly" class="message-error"></div>
            <div class="inputs">
                <div class="input-prepend"><div class="input-content"><svg class="icon"><use href="#envelope"></use></svg></div></div>
                <input asp-for="Email" class="email form-input" placeholder="Email" />
            </div>
            <span asp-validation-for="Email"></span>
            <label asp-for="Enquiry" class="mb-2"></label>
            <div class="inputs">
                <textarea asp-for="Enquiry" placeholder="@T("ContactUs.Enquiry.Hint")" class="enquiry form-input"></textarea>
            </div>
            <span asp-validation-for="Enquiry"></span>
            @if (Model.DisplayCaptcha)
            {

            }
            <div class="captcha-box d-flex justify-content-center align-items-center py-3">
                <nop-captcha />
            </div>
            <button type="submit" name="send-email" class="button-1 contact-us-button w-100"><svg class="icon mr-3"><use href="#paper-plane"></use></svg>@T("ContactUs.Button")</button>
        </form>
            }
            @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ContactUsBottom })
        </div>

    </div>
</div>
