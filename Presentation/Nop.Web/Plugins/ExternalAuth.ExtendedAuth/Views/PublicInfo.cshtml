@model ExternalAuthSettings
@{
    Layout = "";
}
<div class="ExtendedAuthentication" style="margin: 0 auto 1rem auto">
        <ul class="networks">
            @if (Model.FacebookEnable && !string.IsNullOrEmpty(Model.FacebookClientId) && !string.IsNullOrEmpty(Model.FacebookClientSecret))
            {
                <li class="mb-3">
                    <a asp-controller="authentication" asp-action="login" asp-route-returnurl="@Context.Request.Query["ReturnUrl"]" asp-route-authentication="@ExternalAuthEnum.Facebook.ToString()" class="exoauth_btn @ExternalAuthEnum.Facebook.ToString().ToLower()-btn waves-effect waves-light">
                        <svg class="icon mr-4 m-2"><use href="#facebook"></use></svg> <span>Sign in with Facebook</span>
                    </a>
                </li>
            }
            @if (Model.TwitterEnable && !string.IsNullOrEmpty(Model.TwitterClientId) && !string.IsNullOrEmpty(Model.TwitterClientSecret))
            {
                <li>
                    <a asp-controller="authentication" asp-action="login" asp-route-returnurl="@Context.Request.Query["ReturnUrl"]" asp-route-authentication="@ExternalAuthEnum.Twitter.ToString()" class="exoauth_btn @ExternalAuthEnum.Twitter.ToString().ToLower()-btn"></a>
                </li>
            }
            @if (Model.GoogleEnable && !string.IsNullOrEmpty(Model.GoogleClientId) && !string.IsNullOrEmpty(Model.GoogleClientSecret))
            {
                <li>
                    <a asp-controller="authentication" asp-action="login" asp-route-returnurl="@Context.Request.Query["ReturnUrl"]" asp-route-authentication="@ExternalAuthEnum.Google.ToString()" class="exoauth_btn @ExternalAuthEnum.Google.ToString().ToLower()-btn waves-effect waves-light">
                        <svg class="icon mr-4 m-2"><use href="#google"></use></svg> <span>Sign in with Google</span>
                    </a>
                </li>
            }
            @if (Model.MicrosoftEnable && !string.IsNullOrEmpty(Model.MicrosoftClientId) && !string.IsNullOrEmpty(Model.MicrosoftClientSecret))
            {
                <li>
                    <a asp-controller="authentication" asp-action="login" asp-route-returnurl="@Context.Request.Query["ReturnUrl"]" asp-route-authentication="@ExternalAuthEnum.Microsoft.ToString()" class="exoauth_btn @ExternalAuthEnum.Microsoft.ToString().ToLower()-btn"></a>
                </li>
            }
            @if (Model.LinkedInEnable && !string.IsNullOrEmpty(Model.LinkedInClientId) && !string.IsNullOrEmpty(Model.LinkedInClientSecret))
            {
                <li>
                    <a asp-controller="authentication" asp-action="login" asp-route-returnurl="@Context.Request.Query["ReturnUrl"]" asp-route-authentication="@ExternalAuthEnum.LinkedIn.ToString()" class="exoauth_btn @ExternalAuthEnum.LinkedIn.ToString().ToLower()-btn"></a>
                </li>
            }
        </ul>
</div>
